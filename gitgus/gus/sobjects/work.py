"""Work."""
# Do not Edit this file.
# This file is generated from the "gitgus dev generate-sobjects" command
#
# Remember, you can always regenerate this file by running the above command.
# If you have made changes to this file, they will be lost.
# Edit template: sobject.py.jinja2

from datetime import date
from datetime import datetime
from enum import Enum
from typing import Any
from typing import Self
from typing import Dict
from typing import List
from typing import Optional
from typing import Generator

from pydantic import Field, ConfigDict, computed_field
from ..gus_client import GUSClient
from .sobject_base import SObjectBase, SObjectType


class CurrencyIsoCodeEnum(str, Enum):
    """Currency ISO Code."""

    OPTION_0 = "AUD"
    OPTION_1 = "GBP"
    OPTION_2 = "CAD"
    OPTION_3 = "EUR"
    OPTION_4 = "INR"
    OPTION_5 = "JPY"
    OPTION_6 = "SGD"
    OPTION_7 = "SEK"
    OPTION_8 = "USD"


class SeverityEnum(str, Enum):
    """Severity."""

    OPTION_0 = "Crash"
    OPTION_1 = "Bug - no workaround"
    OPTION_2 = "Bug - workaround"
    OPTION_3 = "Annoying"
    OPTION_4 = "Cosmetic"
    OPTION_5 = "Major Feature"
    OPTION_6 = "Minor Feature"
    OPTION_7 = "Trivial"


class SeverityLevelEnum(str, Enum):
    """Severity Level."""

    OPTION_0 = "0"
    OPTION_1 = "1"
    OPTION_2 = "2"
    OPTION_3 = "3"
    OPTION_4 = "4"


class RegressionEnum(str, Enum):
    """Regression."""

    OPTION_0 = "Yes"
    OPTION_1 = "No"


class RemediationEnum(str, Enum):
    """Remediation."""

    OPTION_0 = "CustomerCodeFix"
    OPTION_1 = "CustomIndex"
    OPTION_2 = "CustomIndex 2 col"
    OPTION_3 = "CustomIndexStats"
    OPTION_4 = "CustomStats"
    OPTION_5 = "IndexCoalesce"
    OPTION_6 = "MultinodeOrgSetup"
    OPTION_7 = "NativeIndex"
    OPTION_8 = "OrgPermEdit"
    OPTION_9 = "Other"
    OPTION_10 = "PartitionRebalance"
    OPTION_11 = "RefreshDashboard"
    OPTION_12 = "Scrutiny"
    OPTION_13 = "SkinnyTable"
    OPTION_14 = "SkinnyTblAndNativeIdx"
    OPTION_15 = "Storage stats."


class DeploymentTypeEnum(str, Enum):
    """Deployment Type."""

    OPTION_0 = "Compiled Code"
    OPTION_1 = "Database Script"
    OPTION_2 = "Platform App"
    OPTION_3 = "Stackato App"
    OPTION_4 = "WAR File"
    OPTION_5 = "CDAP App"
    OPTION_6 = "Kubernetes"


class RequestTypeEnum(str, Enum):
    """Request Type."""

    OPTION_0 = "None (default)"
    OPTION_1 = "Configuration - Realm Resize"
    OPTION_2 = "Configuration - Parameter Change"
    OPTION_3 = "Data Modification - Update"
    OPTION_4 = "Data Modification - Failed Replication"
    OPTION_5 = "Data Modification - Delete order notes"
    OPTION_6 = "Data Modification - Delete"
    OPTION_7 = "Data Pull - AWR Report"
    OPTION_8 = "Data Pull - Select"
    OPTION_9 = "Data Pull - Grid-Wide Select"
    OPTION_10 = "Database Restore/Recovery"
    OPTION_11 = "DB Script QA Testing Only"
    OPTION_12 = "Log Pull - General"
    OPTION_13 = "Log Pull - AWR Report"
    OPTION_14 = "Installer Update"
    OPTION_15 = "Investigation - Availability"
    OPTION_16 = "Investigation - Performance"
    OPTION_17 = "Investigation - Database Error"
    OPTION_18 = "MongoDB"
    OPTION_19 = "Other"
    OPTION_20 = "Pre-Deploy Script"
    OPTION_21 = "Post Deploy Script"
    OPTION_22 = "Store Environment"
    OPTION_23 = "IIS Site Update"
    OPTION_24 = "Server Type / Pool Update"
    OPTION_25 = "Files Share Update"
    OPTION_26 = "VIP Update"
    OPTION_27 = "Chef Deployment"
    OPTION_28 = "N/A"


class UiTextStatusEnum(str, Enum):
    """UI Text Status."""

    OPTION_0 = "Not Identified"
    OPTION_1 = "Writer Is Waiting"
    OPTION_2 = "UI Text Deferred"
    OPTION_3 = "No UI Text Needed"
    OPTION_4 = "UI Text Needed"
    OPTION_5 = "Writing in Progress"
    OPTION_6 = "Ready for Developer"
    OPTION_7 = "Writer QA in Progress"
    OPTION_8 = "Writer Signed Off"


class OriginatedFromEnum(str, Enum):
    """Originated From."""

    OPTION_0 = "Client"
    OPTION_1 = "Server"


class PerformanceMetricsEnum(str, Enum):
    """Performance Metrics."""

    OPTION_0 = "APT"
    OPTION_1 = "CPU"
    OPTION_2 = "EPT"
    OPTION_3 = "JVM Errors"
    OPTION_4 = "Old Gen after GC"
    OPTION_5 = "Other"
    OPTION_6 = "Percent time in GC"
    OPTION_7 = "Process memory footprint"
    OPTION_8 = "Thread leak"
    OPTION_9 = "Trust CPU Time"
    OPTION_10 = "Trust OraDbTime"


class SupportCloseLoopEnum(str, Enum):
    """Support Close Loop."""

    OPTION_0 = "Customer - Remediated following support contact"
    OPTION_1 = "Customer - Activity Completed"
    OPTION_2 = "Customer - Took no action, risk remains"
    OPTION_3 = "Customer - No response"
    OPTION_4 = "Customer - Request raised by Support - pending approval to resume"
    OPTION_5 = "Customer - Code fix"
    OPTION_6 = "Customer - Reduced load rate"
    OPTION_7 = "Customer - Reschedule to offpeak"
    OPTION_8 = "SF - New Bug"
    OPTION_9 = "SF - New Feature Request"
    OPTION_10 = "SF - App Capacity"
    OPTION_11 = "SF - DB Capacity"
    OPTION_12 = "SF - Hardware Issue"
    OPTION_13 = "SF - Oracle Bug"
    OPTION_14 = "SF - Incorrect Throttle/Block applied to a customer"


class CategoryEnum(str, Enum):
    """Category."""

    OPTION_0 = "Engineering"
    OPTION_1 = "Non-Engineering"
    OPTION_2 = "Operations"


class DesignNeededEnum(str, Enum):
    """Design Needed."""

    OPTION_0 = "Not identified"
    OPTION_1 = "None required"
    OPTION_2 = "Consultation"
    OPTION_3 = "User flows"
    OPTION_4 = "Information Architecture"
    OPTION_5 = "Concepts"
    OPTION_6 = "Key screens"
    OPTION_7 = "Prototypes"
    OPTION_8 = "Implementation specs"
    OPTION_9 = "Implementation review"
    OPTION_10 = "Done"


class ProductLifecyclePhaseEnum(str, Enum):
    """Product Lifecycle Phase."""

    OPTION_0 = "Design"
    OPTION_1 = "Development"
    OPTION_2 = "Production"
    OPTION_3 = "Building Culture (Learn, Share, Innovate)"


class TrustActivityEnum(str, Enum):
    """Trust Activity."""

    OPTION_0 = "Create test plan"
    OPTION_1 = "Review test plan"
    OPTION_2 = "Create traffic model"
    OPTION_3 = "Review traffic model"
    OPTION_4 = "Create test data"
    OPTION_5 = "Create proof of concept"
    OPTION_6 = "Review proof of concept"
    OPTION_7 = "Create design and architecture docs"
    OPTION_8 = "Review design and architecture docs"
    OPTION_9 = "Create product limits and guardrails"
    OPTION_10 = "Review product limits and guardrails"
    OPTION_11 = "Code review"
    OPTION_12 = "Execute test plans"
    OPTION_13 = "Create test automation"
    OPTION_14 = "Create test tools"
    OPTION_15 = "Review test plan results"
    OPTION_16 = "Performance Analysis"
    OPTION_17 = "Performance validation"
    OPTION_18 = "Analytics - Data query dev"
    OPTION_19 = "Analytics - Feature dev"
    OPTION_20 = "Production monitoring"
    OPTION_21 = "Create production alerting and dashboards"
    OPTION_22 = "Execute scale testing"
    OPTION_23 = "Production investigation"
    OPTION_24 = "Customer perf investigation"
    OPTION_25 = "Cost to serve optimization"
    OPTION_26 = "Release perf investigation"
    OPTION_27 = "System performance investigation"
    OPTION_28 = "Analytics - Support requests"
    OPTION_29 = "Analytics - Trust fixes"
    OPTION_30 = "Mentoring"
    OPTION_31 = "Learning"
    OPTION_32 = "Patents"
    OPTION_33 = "Knowledge sharing internal"
    OPTION_34 = "Knowledge sharing external"
    OPTION_35 = "Miscellaneous"


class Work(SObjectBase, metaclass=SObjectType):
    """Work."""

    _can_be_approved = True
    _base_sf_object = "ADM_Work__c"

    model_config = ConfigDict(
        title="ADM_Work__c",
        validate_assignment=True,
    )

    id_: str = Field(..., alias="Id", title="Record ID", frozen=True, exclude=True)
    owner_id: str = Field(..., alias="OwnerId", title="Owner ID")
    is_deleted: bool = Field(
        ..., alias="IsDeleted", title="Deleted", frozen=True, exclude=True
    )
    name: str = Field(..., alias="Name", title="Work ID", frozen=True, exclude=True)
    currency_iso_code: Optional[CurrencyIsoCodeEnum] = Field(
        ..., alias="CurrencyIsoCode", title="Currency ISO Code"
    )
    record_type_id: Optional[str] = Field(
        ..., alias="RecordTypeId", title="Record Type ID"
    )
    created_date: datetime = Field(
        ..., alias="CreatedDate", title="Created Date", frozen=True, exclude=True
    )
    created_by_id: str = Field(
        ..., alias="CreatedById", title="Created By ID", frozen=True, exclude=True
    )
    last_modified_date: datetime = Field(
        ...,
        alias="LastModifiedDate",
        title="Last Modified Date",
        frozen=True,
        exclude=True,
    )
    last_modified_by_id: str = Field(
        ...,
        alias="LastModifiedById",
        title="Last Modified By ID",
        frozen=True,
        exclude=True,
    )
    system_modstamp: datetime = Field(
        ..., alias="SystemModstamp", title="System Modstamp", frozen=True, exclude=True
    )
    last_activity_date: Optional[date] = Field(
        ...,
        alias="LastActivityDate",
        title="Last Activity Date",
        frozen=True,
        exclude=True,
    )
    may_edit: bool = Field(
        ..., alias="MayEdit", title="May Edit", frozen=True, exclude=True
    )
    is_locked: bool = Field(
        ..., alias="IsLocked", title="Is Locked", frozen=True, exclude=True
    )
    last_viewed_date: Optional[datetime] = Field(
        ..., alias="LastViewedDate", title="Last Viewed Date", frozen=True, exclude=True
    )
    last_referenced_date: Optional[datetime] = Field(
        ...,
        alias="LastReferencedDate",
        title="Last Referenced Date",
        frozen=True,
        exclude=True,
    )
    assigned_on: Optional[date] = Field(
        ..., alias="Assigned_On__c", title="Assigned On", frozen=True, exclude=True
    )
    assignee: Optional[str] = Field(..., alias="Assignee__c", title="Assigned To")
    bug_number: Optional[str] = Field(..., alias="Bug_Number__c", title="Bugforce #")
    visual_link_num_of_test_failures: Optional[str] = Field(
        ...,
        alias="visual_link_num_of_Test_Failures__c",
        title="Test Failures",
        frozen=True,
        exclude=True,
    )
    child_id: Optional[str] = Field(..., alias="Child_ID__c", title="Child_ID")
    customer: Optional[str] = Field(..., alias="Customer__c", title="Customer")
    description: Optional[str] = Field(..., alias="Description__c", title="Comment")
    external_id: Optional[str] = Field(..., alias="External_ID__c", title="External ID")
    found_in_build: Optional[str] = Field(
        ..., alias="Found_in_Build__c", title="Found in Build"
    )
    help_status: Optional[str] = Field(..., alias="Help_Status__c", title="Doc Status")
    major_func_area: Optional[str] = Field(
        ..., alias="Major_Func_Area__c", title="Major Func Area"
    )
    minor_func_area: Optional[str] = Field(
        ..., alias="Minor_Func_Area__c", title="Minor Func Area"
    )
    perforce_status: Optional[str] = Field(
        ...,
        alias="Perforce_Status__c",
        title="Source Control Status",
        frozen=True,
        exclude=True,
    )
    priority: Optional[str] = Field(..., alias="Priority__c", title="Priority")
    product_area: Optional[str] = Field(
        ..., alias="Product_Area__c", title="Product Area"
    )
    product_child: Optional[str] = Field(
        ..., alias="Product_Child__c", title="Product Child"
    )
    product_owner: Optional[str] = Field(
        ..., alias="Product_Owner__c", title="Product Owner"
    )
    qa_engineer: Optional[str] = Field(..., alias="QA_Engineer__c", title="QA Engineer")
    regressed: Optional[bool] = Field(
        ..., alias="Regressed__c", title="Regressed TO BE DEPRECATED"
    )
    related_url: Optional[str] = Field(..., alias="Related_URL__c", title="Related URL")
    number_of_change_lists: Optional[float] = Field(
        ...,
        alias="Number_of_Change_Lists__c",
        title="Number of Change Lists",
        frozen=True,
        exclude=True,
    )
    root_cause_analysis_2: Optional[str] = Field(
        ..., alias="Root_Cause_Analysis_2__c", title="Root Cause Analysis"
    )
    ue_engineer: Optional[str] = Field(..., alias="UE_Engineer__c", title="Designer")
    scheduled_build: Optional[str] = Field(
        ..., alias="Scheduled_Build__c", title="Scheduled Build"
    )
    schema_: Optional[bool] = Field(
        ..., alias="Schema__c", title="Requires Schema Change"
    )
    scrum_team: Optional[str] = Field(..., alias="Scrum_Team__c", title="Team")
    security: Optional[bool] = Field(
        ..., alias="Security__c", title="Security Triaged", frozen=True, exclude=True
    )
    severity: Optional[SeverityEnum] = Field(..., alias="Severity__c", title="Severity")
    status: Optional[str] = Field(..., alias="Status__c", title="Status")
    subject: Optional[str] = Field(..., alias="Subject__c", title="Subject")
    system_test_engineer: Optional[str] = Field(
        ..., alias="System_Test_Engineer__c", title="Performance Engineer"
    )
    tech_writer: Optional[str] = Field(..., alias="Tech_Writer__c", title="Tech Writer")
    type_: Optional[str] = Field(..., alias="Type__c", title="Type")
    ftest: Optional[str] = Field(..., alias="ftest__c", title="Test")
    found_in_build_copy: Optional[str] = Field(
        ..., alias="Found_In_Build_Copy__c", title="Found In Build Copy"
    )
    created_on_import: Optional[datetime] = Field(
        ..., alias="Created_On_import__c", title="Created On (import)"
    )
    created_by_import: Optional[str] = Field(
        ...,
        alias="Created_By_import__c",
        title="Created By (import)",
        frozen=True,
        exclude=True,
    )
    closed: Optional[float] = Field(
        ..., alias="Closed__c", title="Closed", frozen=True, exclude=True
    )
    resolved: Optional[float] = Field(
        ..., alias="Resolved__c", title="Resolved", frozen=True, exclude=True
    )
    closed_on: Optional[datetime] = Field(
        ..., alias="Closed_On__c", title="Closed On", frozen=True, exclude=True
    )
    resolved_on: Optional[datetime] = Field(
        ..., alias="Resolved_On__c", title="Resolved On", frozen=True, exclude=True
    )
    vulnerability_article: Optional[str] = Field(
        ..., alias="Vulnerability_Article__c", title="Vulnerability Article"
    )
    template_description: Optional[str] = Field(
        ..., alias="Template_Description__c", title="Template Description"
    )
    template_name: Optional[str] = Field(
        ..., alias="Template_Name__c", title="Template Name"
    )
    api_connector: Optional[str] = Field(
        ..., alias="API_Connector__c", title="API Connector"
    )
    complete_by: Optional[str] = Field(..., alias="Complete_By__c", title="Complete By")
    parent_id: Optional[str] = Field(..., alias="Parent_ID__c", title="Add Parent ID")
    team_notes: Optional[str] = Field(..., alias="Team_Notes__c", title="Team Notes")
    age: Optional[float] = Field(
        ..., alias="Age__c", title="Age", frozen=True, exclude=True
    )
    number_of_cases: Optional[float] = Field(
        ..., alias="Number_of_Cases__c", title="Cases"
    )
    scheduled_build_copy: Optional[str] = Field(
        ..., alias="Scheduled_Build_Copy__c", title="Scheduled Build Copy"
    )
    record_type: Optional[str] = Field(
        ...,
        alias="Record_Type__c",
        title="Record Type (formula)",
        frozen=True,
        exclude=True,
    )
    last_modified_by: Optional[str] = Field(
        ..., alias="Last_Modified_By__c", title="Last Modified By"
    )
    log_bug_from_template: Optional[str] = Field(
        ...,
        alias="Log_Bug_From_Template__c",
        title="Log Bug From Template",
        frozen=True,
        exclude=True,
    )
    frequency: Optional[str] = Field(..., alias="Frequency__c", title="Frequency")
    impact: Optional[str] = Field(..., alias="Impact__c", title="Impact")
    origin: Optional[str] = Field(..., alias="Origin__c", title="Origin")
    priority_default: Optional[str] = Field(
        ..., alias="Priority_Default__c", title="Priority (default)"
    )
    priority_override_explanation: Optional[str] = Field(
        ...,
        alias="Priority_Override_Explanation__c",
        title="Priority Override Explanation",
    )
    additional_details: Optional[str] = Field(
        ..., alias="Additional_Details__c", title="Additional Details"
    )
    lightning_desktop_impact_rate_month: Optional[float] = Field(
        ...,
        alias="Lightning_Desktop_ImpactRate_Month__c",
        title="Gack Lightning Desktop Impact Rate Month",
    )
    budget_id: Optional[str] = Field(..., alias="Budget_ID__c", title="Budget ID")
    closed_story_points: Optional[float] = Field(
        ...,
        alias="Closed_Story_Points__c",
        title="Closed Story Points",
        frozen=True,
        exclude=True,
    )
    dependencies: Optional[float] = Field(
        ..., alias="Dependencies__c", title="Dependencies"
    )
    dependents: Optional[float] = Field(..., alias="Dependents__c", title="Dependents")
    detailed: Optional[bool] = Field(
        ..., alias="Detailed__c", title="Exclude from Prioritize View"
    )
    has_story_points: Optional[str] = Field(
        ...,
        alias="Has_Story_Points__c",
        title="Has Story Points?",
        frozen=True,
        exclude=True,
    )
    priority_rank: Optional[float] = Field(
        ..., alias="Priority_Rank__c", title="Backlog Rank"
    )
    scrumforce_id: Optional[str] = Field(
        ..., alias="Scrumforce_ID__c", title="Scrumforce ID"
    )
    solution_overview: Optional[str] = Field(
        ..., alias="Solution_Overview__c", title="Solution Overview"
    )
    sprint: Optional[str] = Field(..., alias="Sprint__c", title="Sprint")
    story_points: Optional[float] = Field(
        ..., alias="Story_Points__c", title="Story Points"
    )
    use_prioritizer: Optional[bool] = Field(
        ..., alias="Use_Prioritizer__c", title="Include in Prioritize View"
    )
    num_of_prod_occ: Optional[float] = Field(
        ..., alias="Num_Of_Prod_Occ__c", title="Gack Occurrences - Today"
    )
    age_with_scrum_team_when_closed: Optional[float] = Field(
        ...,
        alias="Age_With_Scrum_Team_When_Closed__c",
        title="Age With Scrum Team When Closed",
        frozen=True,
        exclude=True,
    )
    was_ever_returned_to_support: Optional[bool] = Field(
        ...,
        alias="Was_Ever_Returned_to_Support__c",
        title="Was Ever Returned to Support",
    )
    lightning_mobile_impact_rate_month: Optional[float] = Field(
        ...,
        alias="Lightning_Mobile_ImpactRate_Month__c",
        title="Gack Lightning Mobile Impact Rate Month",
    )
    age_with_scrum_team: Optional[float] = Field(
        ...,
        alias="Age_With_Scrum_Team__c",
        title="Age With Scrum Team",
        frozen=True,
        exclude=True,
    )
    scrum_team_last_modified: Optional[datetime] = Field(
        ..., alias="Scrum_Team_Last_Modified__c", title="Scrum Team Last Modified"
    )
    server_desktop_impact_rate_month: Optional[float] = Field(
        ...,
        alias="Server_Desktop_ImpactRate_Month__c",
        title="Gack Server Desktop Impact Rate Month",
    )
    cs_contact: Optional[str] = Field(
        ..., alias="CS_Contact__c", title="Support Contact"
    )
    closed_by: Optional[str] = Field(
        ..., alias="Closed_By__c", title="Closed By", frozen=True, exclude=True
    )
    critical_crm_feature: Optional[bool] = Field(
        ...,
        alias="Critical_CRM_Feature__c",
        title="Critical CRM Feature or Org Inaccessible",
    )
    deal_at_risk: Optional[str] = Field(
        ..., alias="Deal_at_Risk__c", title="Deal at Risk"
    )
    estimated_financial_impact: Optional[float] = Field(
        ..., alias="Estimated_Financial_Impact__c", title="Estimated Financial Impact"
    )
    executive_involved: Optional[bool] = Field(
        ..., alias="Executive_Involved__c", title="Executive Involved"
    )
    red_account: Optional[bool] = Field(
        ..., alias="Red_Account__c", title="Red Account"
    )
    request_rd_mgr_review: Optional[bool] = Field(
        ..., alias="Request_RD_Mgr_Review__c", title="Request Senior Mgr Review"
    )
    resolved_by: Optional[str] = Field(
        ..., alias="Resolved_By__c", title="Resolved By", frozen=True, exclude=True
    )
    senior_management_poc: Optional[str] = Field(
        ..., alias="Senior_Management_POC__c", title="Senior Management POC"
    )
    severity_level: Optional[SeverityLevelEnum] = Field(
        ..., alias="Severity_Level__c", title="Severity Level"
    )
    steps_to_reproduce: Optional[str] = Field(
        ..., alias="Steps_to_Reproduce__c", title="Steps to Reproduce"
    )
    attributes: Optional[str] = Field(..., alias="Attributes__c", title="Attributes")
    of_test_failures: Optional[float] = Field(
        ..., alias="of_Test_Failures__c", title="Test Failures Count"
    )
    details_and_steps_to_reproduce: Optional[str] = Field(
        ...,
        alias="Details_and_Steps_to_Reproduce__c",
        title="Details and Steps to Reproduce",
    )
    found_in_build_name: Optional[str] = Field(
        ...,
        alias="Found_In_Build_Name__c",
        title="Found In Build Name",
        frozen=True,
        exclude=True,
    )
    impact_name: Optional[str] = Field(
        ..., alias="Impact_Name__c", title="Impact Name", frozen=True, exclude=True
    )
    scheduled_build_name: Optional[str] = Field(
        ...,
        alias="Scheduled_Build_Name__c",
        title="Scheduled Build Name",
        frozen=True,
        exclude=True,
    )
    scrum_team_name: Optional[str] = Field(
        ...,
        alias="Scrum_Team_Name__c",
        title="Scrum Team Name",
        frozen=True,
        exclude=True,
    )
    sprint_name: Optional[str] = Field(
        ..., alias="Sprint_Name__c", title="Sprint Name", frozen=True, exclude=True
    )
    user_profile_of_the_creator: Optional[str] = Field(
        ...,
        alias="User_Profile_of_the_Creator__c",
        title="User Profile of the Creator",
        frozen=True,
        exclude=True,
    )
    test_plan: Optional[str] = Field(..., alias="Test_Plan__c", title="Test Plan")
    details: Optional[str] = Field(..., alias="Details__c", title="Description")
    total_age_when_closed: Optional[float] = Field(
        ...,
        alias="Total_Age_When_Closed__c",
        title="Total Age When Closed",
        frozen=True,
        exclude=True,
    )
    regression: Optional[RegressionEnum] = Field(
        ..., alias="Regression__c", title="Regression"
    )
    related_url_link: Optional[str] = Field(
        ...,
        alias="Related_URL_Link__c",
        title="Related URL Link",
        frozen=True,
        exclude=True,
    )
    reliability_gap: Optional[str] = Field(
        ..., alias="Reliability_Gap__c", title="Reliability Gap"
    )
    creation_origin: Optional[str] = Field(
        ..., alias="Creation_Origin__c", title="Creation Origin"
    )
    assignees: Optional[str] = Field(
        ..., alias="Assignees__c", title="transfer Assignees"
    )
    other_recipients: Optional[str] = Field(
        ..., alias="Other_Recipients__c", title="transfer Other Recipients"
    )
    previous_comments: Optional[str] = Field(
        ..., alias="Previous_Comments__c", title="transfer Previous Comments"
    )
    product_tag_name: Optional[str] = Field(
        ...,
        alias="Product_Tag_Name__c",
        title="Product Tag Name",
        frozen=True,
        exclude=True,
    )
    product_tag: Optional[str] = Field(..., alias="Product_Tag__c", title="Product Tag")
    sprint_rank: Optional[float] = Field(
        ..., alias="Sprint_Rank__c", title="Rank of this work item in a sprint"
    )
    test_failure_status: Optional[str] = Field(
        ...,
        alias="Test_Failure_Status__c",
        title="Test Failure Status",
        frozen=True,
        exclude=True,
    )
    feature_rank: Optional[float] = Field(
        ..., alias="Feature_Rank__c", title="Feature Rank"
    )
    scheduled_build_rank: Optional[float] = Field(
        ..., alias="Scheduled_Build_Rank__c", title="Rank in a scheduled build for team"
    )
    theme_rank: Optional[float] = Field(
        ..., alias="Theme_Rank__c", title="Rank of work item for team in a theme"
    )
    trust_rank: Optional[float] = Field(
        ..., alias="Trust_Rank__c", title="Rank of work item for trust"
    )
    readme_notes: Optional[str] = Field(
        ..., alias="Readme_Notes__c", title="Readme Notes"
    )
    sprint_timeframe: Optional[str] = Field(
        ...,
        alias="Sprint_Timeframe__c",
        title="Sprint Timeframe YYYY.MMx",
        frozen=True,
        exclude=True,
    )
    known_issue_id: Optional[str] = Field(
        ..., alias="Known_Issue_ID__c", title="Known Issue ID"
    )
    known_issue_link: Optional[str] = Field(
        ...,
        alias="Known_Issue_Link__c",
        title="Known Issue Link",
        frozen=True,
        exclude=True,
    )
    known_issue_num_reporting_customers: Optional[float] = Field(
        ...,
        alias="Known_Issue_Num_Reporting_Customers__c",
        title="KI Reporting Customers",
    )
    completed_hours: Optional[float] = Field(
        ...,
        alias="Completed_Hours__c",
        title="Completed Hours",
        frozen=True,
        exclude=True,
    )
    backburner_rank: Optional[float] = Field(
        ..., alias="Backburner_Rank__c", title="Backburner Rank"
    )
    epic: Optional[str] = Field(..., alias="Epic__c", title="Epic")
    resolution: Optional[str] = Field(
        ..., alias="Resolution__c", title="Test Resolution"
    )
    auto_build: Optional[str] = Field(..., alias="Auto_Build__c", title="Auto Build")
    branch: Optional[str] = Field(..., alias="Branch__c", title="Branch")
    epic_rank: Optional[float] = Field(..., alias="Epic_Rank__c", title="Epic Rank")
    column_rank: Optional[float] = Field(
        ..., alias="Column_Rank__c", title="Column Rank"
    )
    column: Optional[str] = Field(..., alias="Column__c", title="Kanban State")
    cloud: Optional[str] = Field(
        ..., alias="Cloud__c", title="Cloud", frozen=True, exclude=True
    )
    due_date: Optional[datetime] = Field(..., alias="Due_Date__c", title="Due Date")
    color: Optional[str] = Field(..., alias="Color__c", title="Color")
    apex_hammer_compile_failure: Optional[bool] = Field(
        ..., alias="Apex_Hammer_Compile_Failure__c", title="Apex Hammer Compile Failure"
    )
    data_silo_test_affected: Optional[bool] = Field(
        ..., alias="Data_Silo_Test_Affected__c", title="Data Silo Test Affected"
    )
    environment: Optional[str] = Field(..., alias="Environment__c", title="Environment")
    mobile_device_os: Optional[str] = Field(
        ..., alias="Mobile_Device_OS__c", title="Mobile Device OS"
    )
    mobile_device: Optional[str] = Field(
        ..., alias="Mobile_Device__c", title="Mobile Device"
    )
    mobile_network: Optional[str] = Field(
        ..., alias="Mobile_Network__c", title="Mobile Network"
    )
    number_of_orgs_affected: Optional[float] = Field(
        ..., alias="Number_of_Orgs_affected__c", title="Number of Orgs affected"
    )
    number_of_tests_classes_affected: Optional[float] = Field(
        ...,
        alias="Number_of_Tests_Classes_affected__c",
        title="Number of Tests/Classes affected",
    )
    s1_app_build_number: Optional[str] = Field(
        ..., alias="S1_App_Build_Number__c", title="S1 App Build Number"
    )
    out_of_sla: Optional[bool] = Field(
        ..., alias="Out_of_SLA__c", title="Out of SLA", frozen=True, exclude=True
    )
    number_of_sla_violations: Optional[float] = Field(
        ...,
        alias="Number_of_SLA_Violations__c",
        title="Number of T&P SLA Violations",
        frozen=True,
        exclude=True,
    )
    capacity_cost_impact: Optional[float] = Field(
        ..., alias="Capacity_Cost_Impact__c", title="Capacity Cost Impact"
    )
    capacity_impact: Optional[str] = Field(
        ..., alias="Capacity_Impact__c", title="Capacity Impact"
    )
    cost_of_effort: Optional[float] = Field(
        ..., alias="Cost_of_Effort__c", title="Cost of Effort"
    )
    customer_impact: Optional[str] = Field(
        ..., alias="Customer_Impact__c", title="Customer Impact"
    )
    object_: Optional[str] = Field(..., alias="Object__c", title="Object")
    page_type: Optional[str] = Field(..., alias="Page_Type__c", title="Page Type")
    platform: Optional[str] = Field(..., alias="Platform__c", title="Platform")
    buffer_gets: Optional[str] = Field(..., alias="Buffer_Gets__c", title="Buffer Gets")
    cpu_savings: Optional[str] = Field(..., alias="CPU_Savings__c", title="CPU Savings")
    feedback: Optional[str] = Field(..., alias="Feedback__c", title="Feedback")
    highlight: Optional[bool] = Field(..., alias="Highlight__c", title="Highlight")
    node: Optional[str] = Field(..., alias="Node__c", title="Node")
    pod: Optional[str] = Field(..., alias="POD__c", title="POD")
    recurring_issue: Optional[bool] = Field(
        ..., alias="Recurring_Issue__c", title="Recurring Issue"
    )
    remediation: Optional[RemediationEnum] = Field(
        ..., alias="Remediation__c", title="Remediation"
    )
    estimation_remediation_date: Optional[date] = Field(
        ..., alias="Estimation_Remediation_Date__c", title="Estimated Remediation Date"
    )
    number_of_hosts_affected: Optional[float] = Field(
        ..., alias="Number_of_Hosts_Affected__c", title="Number of Hosts Affected"
    )
    original_detection_date: Optional[date] = Field(
        ..., alias="Original_Detection_Date__c", title="Original Detection Date"
    )
    original_severity: Optional[str] = Field(
        ..., alias="Original_Severity__c", title="Original Severity"
    )
    risk_adjustment_rationale: Optional[str] = Field(
        ..., alias="Risk_Adjustment_Rationale__c", title="Risk Adjustment Rationale"
    )
    vulnerability_category: Optional[str] = Field(
        ..., alias="Vulnerability_Category__c", title="Vulnerability Category"
    )
    vulnerability_id: Optional[str] = Field(
        ..., alias="Vulnerability_ID__c", title="Vulnerability ID"
    )
    access_location: Optional[str] = Field(
        ..., alias="Access_Location__c", title="Access Location"
    )
    component: Optional[str] = Field(
        ..., alias="Component__c", title="Deployment Component/s"
    )
    deployment_type: Optional[DeploymentTypeEnum] = Field(
        ..., alias="Deployment_Type__c", title="Deployment Type"
    )
    request_type: Optional[RequestTypeEnum] = Field(
        ..., alias="Request_Type__c", title="Request Type"
    )
    database_name: Optional[str] = Field(
        ..., alias="Database_Name__c", title="Database Name"
    )
    capex_enabled: Optional[bool] = Field(
        ..., alias="Capex_Enabled__c", title="New Customer Facing Feature"
    )
    major_release: Optional[str] = Field(
        ..., alias="Major_Release__c", title="Major Release", frozen=True, exclude=True
    )
    escalation_point: Optional[float] = Field(
        ..., alias="Escalation_Point__c", title="Escalation Point"
    )
    work_id_and_subject: Optional[str] = Field(
        ...,
        alias="WorkId_and_Subject__c",
        title="WorkId and Subject",
        frozen=True,
        exclude=True,
    )
    associated_url: Optional[str] = Field(
        ..., alias="Associated_URL__c", title="Associated URL"
    )
    epic_name: Optional[str] = Field(
        ..., alias="Epic_Name__c", title="Epic Name", frozen=True, exclude=True
    )
    gack_occurrences: Optional[float] = Field(
        ..., alias="Gack_Occurrences__c", title="Gack Occurrences - 1 year"
    )
    stack_trace_link: Optional[str] = Field(
        ...,
        alias="Stack_Trace_Link__c",
        title="Stack Trace Link",
        frozen=True,
        exclude=True,
    )
    gack_stack_trace_id: Optional[float] = Field(
        ..., alias="Gack_Stack_Trace_Id__c", title="Stack Trace Id"
    )
    gack_first_seen: Optional[datetime] = Field(
        ..., alias="Gack_First_Seen__c", title="Gack First Seen"
    )
    sla_warning_notification_sent: Optional[bool] = Field(
        ...,
        alias="SLA_Warning_Notification_Sent__c",
        title="SLA Warning Notification Sent",
    )
    apex_hammer_gack_affected_orgs: Optional[str] = Field(
        ...,
        alias="Apex_Hammer_Gack_Affected_Orgs__c",
        title="Apex Hammer Gack Affected Orgs",
    )
    modules: Optional[str] = Field(..., alias="Modules__c", title="Module(s)")
    security_assessment_required: Optional[bool] = Field(
        ...,
        alias="Security_Assessment_Required__c",
        title="Security Assessment Required?",
    )
    security_assessment: Optional[str] = Field(
        ..., alias="Security_Assessment__c", title="Security Assessment"
    )
    power_of_one: Optional[float] = Field(
        ..., alias="Power_Of_One__c", title="Power Of One", frozen=True, exclude=True
    )
    package_version: Optional[str] = Field(
        ..., alias="Package_Version__c", title="Package Version"
    )
    rest_creator_id: Optional[str] = Field(
        ...,
        alias="REST_Creator_ID__c",
        title="REST Creator ID",
        frozen=True,
        exclude=True,
    )
    rest_creator_link: Optional[str] = Field(
        ...,
        alias="REST_Creator_Link__c",
        title="REST Creator",
        frozen=True,
        exclude=True,
    )
    rest_creator_name: Optional[str] = Field(
        ...,
        alias="REST_Creator_Name__c",
        title="REST Creator Name",
        frozen=True,
        exclude=True,
    )
    rest_initiation_org_url: Optional[str] = Field(
        ...,
        alias="REST_Initiation_Org_URL__c",
        title="REST Initiation Org URL",
        frozen=True,
        exclude=True,
    )
    all_autobuilds: Optional[str] = Field(
        ..., alias="All_Autobuilds__c", title="All Autobuilds"
    )
    all_test_failure_count: Optional[float] = Field(
        ..., alias="All_Test_Failure_Count__c", title="All Test Failure Count"
    )
    gdpr_data_attachment_flag: Optional[bool] = Field(
        ..., alias="GDPR_Data_Attachment_Flag__c", title="GDPR Data Attachment Flag"
    )
    board_column_rank: Optional[float] = Field(
        ..., alias="Board_Column_Rank__c", title="Board Column Rank"
    )
    board_column: Optional[str] = Field(
        ..., alias="Board_Column__c", title="Board Column"
    )
    contains_lockable_autobuilds: Optional[bool] = Field(
        ...,
        alias="Contains_Lockable_Autobuilds__c",
        title="Contains Lockable Autobuilds",
    )
    cycle_time: Optional[float] = Field(..., alias="CycleTime__c", title="Cycle Time")
    lead_time: Optional[float] = Field(..., alias="LeadTime__c", title="Lead Time")
    absolute_age: Optional[float] = Field(
        ..., alias="Absolute_Age__c", title="Absolute Age", frozen=True, exclude=True
    )
    ui_text_status: Optional[UiTextStatusEnum] = Field(
        ..., alias="UI_Text_Status__c", title="UI Text Status"
    )
    wait_time: Optional[float] = Field(..., alias="WaitTime__c", title="Wait Time")
    initiate_time: Optional[float] = Field(
        ..., alias="InitiateTime__c", title="Initiate Time"
    )
    originated_from: Optional[OriginatedFromEnum] = Field(
        ..., alias="Originated_From__c", title="Originated From"
    )
    occurrences_past_30_days: Optional[float] = Field(
        ..., alias="Occurrences_Past_30_Days__c", title="Gack Occurrences - 30 days"
    )
    product_legal_request: Optional[str] = Field(
        ..., alias="Product_Legal_Request__c", title="Product Legal Request"
    )
    age_in_hours: Optional[float] = Field(
        ..., alias="Age_In_Hours__c", title="Age_In_Hours", frozen=True, exclude=True
    )
    related_work: Optional[str] = Field(
        ..., alias="Related_Work__c", title="New Related Work"
    )
    known_issue_url: Optional[str] = Field(
        ...,
        alias="Known_Issue_URL__c",
        title="Known Issue URL",
        frozen=True,
        exclude=True,
    )
    performance_metrics: Optional[PerformanceMetricsEnum] = Field(
        ..., alias="Performance_Metrics__c", title="Performance Metrics"
    )
    story_utlization_percent_workday: Optional[float] = Field(
        ...,
        alias="Story_Utlization_Percent_Workday__c",
        title="Story Allocation Percentage",
        frozen=True,
        exclude=True,
    )
    age_since_last_modified: Optional[float] = Field(
        ...,
        alias="Age_Since_Last_Modified__c",
        title="Age Since Last Modified",
        frozen=True,
        exclude=True,
    )
    buffer_gets_number: Optional[float] = Field(
        ...,
        alias="Buffer_Gets_Number__c",
        title="Buffer Gets Number",
        frozen=True,
        exclude=True,
    )
    cpu_savings_number: Optional[float] = Field(
        ...,
        alias="CPU_Savings_Number__c",
        title="CPU Savings Number",
        frozen=True,
        exclude=True,
    )
    vulnerability_found_by: Optional[str] = Field(
        ..., alias="Vulnerability_Found_By__c", title="Vulnerability Found By"
    )
    vulnerability_how_found: Optional[str] = Field(
        ..., alias="Vulnerability_How_Found__c", title="Vulnerability How Found"
    )
    vulnerability_severity: Optional[str] = Field(
        ..., alias="Vulnerability_Severity__c", title="Vulnerability Severity"
    )
    vulnerability_when_found: Optional[str] = Field(
        ..., alias="Vulnerability_When_Found__c", title="Vulnerability When Found"
    )
    support_close_loop: Optional[SupportCloseLoopEnum] = Field(
        ..., alias="Support_Close_Loop__c", title="Support Close Loop"
    )
    number_of_days_in_p1_priority: Optional[float] = Field(
        ...,
        alias="Number_of_Days_in_P1_Priority__c",
        title="Number of Days in P1 Priority",
        frozen=True,
        exclude=True,
    )
    p1_priority_date: Optional[datetime] = Field(
        ..., alias="P1_Priority_Date__c", title="P1 Priority Date"
    )
    initiated_feed: Optional[str] = Field(
        ..., alias="Initiated_Feed__c", title="Initiated Feed"
    )
    case: Optional[str] = Field(..., alias="Case__c", title="Case")
    quip_url: Optional[str] = Field(..., alias="Quip_URL__c", title="Quip_URL")
    security_assessment_result_of: Optional[str] = Field(
        ...,
        alias="Security_Assessment_Result_Of__c",
        title="Security Assessment Result (Deprecated)",
    )
    pager_duty_link: Optional[str] = Field(
        ...,
        alias="Pager_Duty_Link__c",
        title="Pager Duty Link",
        frozen=True,
        exclude=True,
    )
    pipeline: Optional[str] = Field(..., alias="Pipeline__c", title="Pipeline")
    sum_of_reported_customers_and_cases: Optional[float] = Field(
        ...,
        alias="Sum_of_Reported_Customers_and_Cases__c",
        title="Sum of Reported Customers and Cases",
        frozen=True,
        exclude=True,
    )
    category: Optional[CategoryEnum] = Field(..., alias="Category__c", title="Category")
    column_team_id: Optional[str] = Field(
        ...,
        alias="Column_Team_Id__c",
        title="Kanban Column Team Id",
        frozen=True,
        exclude=True,
    )
    pending_release_time: Optional[float] = Field(
        ...,
        alias="PendingReleaseTime__c",
        title="Pending Release Time",
        frozen=True,
        exclude=True,
    )
    release_time: Optional[float] = Field(
        ..., alias="ReleaseTime__c", title="Release Time", frozen=True, exclude=True
    )
    bwc_verified_number_of_cases: Optional[float] = Field(
        ..., alias="BWC_verified_number_of_cases__c", title="Verified Number Of Cases"
    )
    design_needed: Optional[DesignNeededEnum] = Field(
        ..., alias="Design_Needed__c", title="Design Needed"
    )
    gidx_idea: Optional[str] = Field(..., alias="GIDX_Idea__c", title="GIDX Idea")
    bug_lookup_key: Optional[str] = Field(
        ...,
        alias="Bug_Lookup_Key__c",
        title="Bug Lookup Key",
        frozen=True,
        exclude=True,
    )
    number_of_is_vs_affected: Optional[float] = Field(
        ...,
        alias="Number_of_ISVs_Affected__c",
        title="# of ISVs Affected",
        frozen=True,
        exclude=True,
    )
    security_vulnerability_category: Optional[str] = Field(
        ...,
        alias="Security_Vulnerability_Category__c",
        title="Security Vulnerability Category",
    )
    number_of_problems: Optional[float] = Field(
        ...,
        alias="Number_of_Problems__c",
        title="Number of Problems",
        frozen=True,
        exclude=True,
    )
    product_lifecycle_phase: Optional[ProductLifecyclePhaseEnum] = Field(
        ..., alias="Product_Lifecycle_Phase__c", title="Product Lifecycle Phase"
    )
    trust_activity: Optional[TrustActivityEnum] = Field(
        ..., alias="Trust_Activity__c", title="Trust Activity"
    )
    first_time_in_progress: Optional[datetime] = Field(
        ..., alias="First_Time_In_Progress__c", title="First Time In Progress"
    )
    days_in_progress: Optional[float] = Field(
        ...,
        alias="Days_In_Progress__c",
        title="Days In Progress",
        frozen=True,
        exclude=True,
    )
    security_engagement_group: Optional[str] = Field(
        ..., alias="Security_Engagement_Group__c", title="Security Engagement Group"
    )

    @property
    def owner_name(self):
        return self._get_connected_object_name(["Group", "User"], self.owner_id)

    @property
    def created_by_name(self):
        return self._get_connected_object_name(["User"], self.created_by_id)

    @property
    def assignee_name(self):
        return self._get_connected_object_name(["User"], self.assignee)

    @property
    def product_owner_name(self):
        return self._get_connected_object_name(["User"], self.product_owner)

    @property
    def qa_engineer_name(self):
        return self._get_connected_object_name(["User"], self.qa_engineer)

    @property
    def root_cause_analysis_2_name(self):
        return self._get_connected_object_name(["RCA__c"], self.root_cause_analysis_2)

    @property
    def ue_engineer_name(self):
        return self._get_connected_object_name(["User"], self.ue_engineer)

    @property
    def system_test_engineer_name(self):
        return self._get_connected_object_name(["User"], self.system_test_engineer)

    @property
    def tech_writer_name(self):
        return self._get_connected_object_name(["User"], self.tech_writer)

    @property
    def created_by_import_name(self):
        return self._get_connected_object_name(["User"], self.created_by_import)

    @property
    def vulnerability_article_name(self):
        return self._get_connected_object_name(
            ["Knowledge__kav"], self.vulnerability_article
        )

    @property
    def last_modified_by_name(self):
        return self._get_connected_object_name(["User"], self.last_modified_by)

    @property
    def frequency_name(self):
        return self._get_connected_object_name(["ADM_Frequency__c"], self.frequency)

    @property
    def solution_overview_name(self):
        return self._get_connected_object_name(
            ["ADM_Solution_Overview__c"], self.solution_overview
        )

    @property
    def cs_contact_name(self):
        return self._get_connected_object_name(["User"], self.cs_contact)

    @property
    def senior_management_poc_name(self):
        return self._get_connected_object_name(["User"], self.senior_management_poc)

    @property
    def test_plan_name(self):
        return self._get_connected_object_name(["QA_Test_Plan__c"], self.test_plan)

    @property
    def reliability_gap_name(self):
        return self._get_connected_object_name(
            ["SM_Reliability_Gap__c"], self.reliability_gap
        )

    @property
    def column_name(self):
        return self._get_connected_object_name(["ADM_Column__c"], self.column)

    @property
    def color_name(self):
        return self._get_connected_object_name(["ADM_Color__c"], self.color)

    @property
    def security_assessment_name(self):
        return self._get_connected_object_name(
            ["ADM_Security_Assessment__c"], self.security_assessment
        )

    @property
    def board_column_name(self):
        return self._get_connected_object_name(["ADM_Column__c"], self.board_column)

    @property
    def product_legal_request_name(self):
        return self._get_connected_object_name(
            ["PLR_Product_Legal_Request__c"], self.product_legal_request
        )

    @property
    def related_work_name(self):
        return self._get_connected_object_name(["ADM_Work__c"], self.related_work)

    @property
    def case_name(self):
        return self._get_connected_object_name(["Case"], self.case)

    @property
    def security_assessment_result_of_name(self):
        return self._get_connected_object_name(
            ["ADM_Security_Assessment__c"], self.security_assessment_result_of
        )

    @property
    def pipeline_name(self):
        return self._get_connected_object_name(["SM_Pipeline__c"], self.pipeline)

    @property
    def gidx_idea_name(self):
        return self._get_connected_object_name(["GIDX_Idea__c"], self.gidx_idea)

    @property
    def security_engagement_group_name(self):
        return self._get_connected_object_name(
            ["SAA_Engagement_Group_c__x"], self.security_engagement_group
        )

    def __init__(self, **kwargs: Any):
        """
        Initialize Salesforce Object.

        :param **kwargs: keyword arguments
        """
        super().__init__(**kwargs)

    @property
    def web_url(self) -> str:
        """
        Web URL.

        :returns: web url
        """
        return f"https://{GUSClient.instance().sf.sf_instance}/{self.id_}"

    @classmethod
    def get_by_id(cls, id_: str) -> Self:
        """
        Get work.

        :param id_: Salesforce Object Id
        :returns: Work object
        """
        x = GUSClient.instance().sf.__getattr__("ADM_Work__c").get(id_)
        return Work(**{"sf": GUSClient.instance().sf, **x})

    @classmethod
    def create(cls, **kwargs: Any) -> Self:
        """
        Create work.
        :param **kwargs: values for the fields of the Work object
        :returns: Work object
        :raises RuntimeError: if object creation failed
        """
        lookup = cls._get_field_to_sf_name_dict()
        fields = {lookup[k]: v for k, v in kwargs.items()}
        return cls._create("FeedItem", fields)

    @classmethod
    def update(cls, model: Self, headers: Optional[Dict[str, str]] = None) -> None:
        """
        Update Salesforce API with changes.
        :param model: Work object to update
        :param headers: headers to send with REST call
            https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/headers.htm
        """

        updates = model.model_dump_json(
            by_alias=True, exclude_unset=True, exclude_defaults=True, exclude_none=True
        )
        import json

        updates = json.loads(updates)  # TODO - better way to do this?
        if updates:
            GUSClient.instance().sf.__getattr__("ADM_Work__c").update(
                model.id_, updates, headers=headers
            )

    @classmethod
    def soql_query(cls, where_clause: str) -> Generator[Self, None, None]:
        """
        Query Work by SOQL WHERE clause.

        :param where_clause: where clause of SOQL query
        :yields: Work objects
        """
        for x in cls._query_soql("ADM_Work__c", where_clause):
            yield Work(**x)
